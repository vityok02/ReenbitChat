@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using ReenbitChatClient.Models
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation

<PageTitle>Waiting Room</PageTitle>

@if (IsConnected)
{
    <Chat
    ChatName="chatInput"
    Messages="messages"
    CloseChat="CloseChat"/>
}
else
{
    <WaitingRoom JoinChat="Join" />
}

@code {
    private HubConnection? hubConnection;
    private List<Message> messages = [];
    private string? chatInput;

    public bool IsConnected 
    { 
        get => hubConnection?.State == HubConnectionState.Connected;
        private set {}
    }


    private async Task Join(UserConnection userConnection)
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation
                .ToAbsoluteUri("https://localhost:7036/chathub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", 
            (user, message) =>
        {
            messages.Add(new Message(user, message));
            InvokeAsync(StateHasChanged);
        });

        await hubConnection
            .StartAsync();

        await hubConnection
            .SendAsync("JoinChat", userConnection);
    }

    private async Task CloseChat()
    {
        if (hubConnection is not null)
        {
            await hubConnection.StopAsync();
            await hubConnection.DisposeAsync();
        }

        IsConnected = false;
    }
}
